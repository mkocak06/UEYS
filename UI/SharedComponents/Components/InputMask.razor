@inject IJSRuntime JSRuntime
@inherits Microsoft.AspNetCore.Components.Forms.InputText
<input @ref="_ref" id="@guid" @attributes="AdditionalAttributes" class="@CssClass" value="@Value" @onkeyup="OnInputChange" />
@code {
    [Parameter] public bool FocusOnFirstRender { get; set; } = false;
    private ElementReference _ref;
    private async Task OnInputChange()
    {
        Value = await JSRuntime.InvokeAsync<string>("unmaskedValue", guid.ToString());
        await ValueChanged.InvokeAsync(Value);
    }

    Guid guid { get; set; }
    protected override void OnInitialized()
    {
        guid = Guid.NewGuid();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if(FocusOnFirstRender)
                _ref.FocusAsync();
            await JSRuntime.InvokeVoidAsync("mask",guid.ToString(), AdditionalAttributes["data-mask"].ToString());
        }
    }
    protected override bool TryParseValueFromString(string value, out string result, out string validationErrorMessage)
    {
        result = value;
        validationErrorMessage = null;
        return true;
    }

    public async Task<string> GetMaskedValue()
    {
        return await JSRuntime.InvokeAsync<string>("unmaskedValue", guid.ToString());
    }

    public async Task Focus()
    {
        await _ref.FocusAsync();
    }
}
