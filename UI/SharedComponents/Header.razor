@using Shared.ResponseModels;
@using UI.SharedComponents.Store;
@inherits FluxorComponent

<div id="kt_header" class="header header-fixed">
    <!--begin::Container-->
    <div class="container-fluid d-flex align-items-stretch justify-content-between">
        <!--begin::Header Menu Wrapper-->
        <div class="header-menu-wrapper header-menu-wrapper-left" id="kt_header_menu_wrapper">
            <!--begin::Header Menu-->
            <div id="kt_header_menu" class="header-menu header-menu-mobile header-menu-layout-default">
                <!--begin::Header Nav-->
                <ul class="menu-nav">
                </ul>
                <!--end::Header Nav-->
            </div>
            <!--end::Header Menu-->
        </div>
        <!--end::Header Menu Wrapper-->
        <!--begin::Topbar-->
        <div class="topbar">
            <SelectLanguage></SelectLanguage>
            <Support></Support>
            <div class="topbar-item ml-4">
                @if (AuthenticationService.Roles != null)
                {
                    <div class="btn-group" @onclick="() => _roleSelectModal.OpenModal()">
                        <div class="btn btn-icon w-auto btn-clean d-flex align-items-center btn-lg px-2">
                            <div class="d-flex flex-column align-items-start justify-content-center">
                                <span class="text-muted font-size-xs d-none d-md-inline mb-0">Rol: </span>
                                <span class="text-dark-50 font-weight-bolder font-size-sm d-none d-md-inline mr-3">@(AuthenticationService.Roles?.FirstOrDefault(x => x.Id == AuthenticationService.User.SelectedRoleId)?.RoleName ?? "-")</span>
                            </div>
                            <span class="symbol symbol-25 symbol-success">
                                <span class="symbol-label font-size-h5 font-weight-bold">
                                    <span class="svg-icon svg-icon-white svg-icon-1x">
                                        <!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/keen/releases/2021-04-21-040700/theme/demo1/dist/../src/media/svg/icons/Navigation/Exchange.svg-->
                                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                            <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                                <polygon points="0 0 24 0 24 24 0 24" />
                                                <rect fill="#000000" opacity="0.3" transform="translate(13.000000, 6.000000) rotate(-450.000000) translate(-13.000000, -6.000000) " x="12" y="8.8817842e-16" width="2" height="12" rx="1" />
                                                <path d="M9.79289322,3.79289322 C10.1834175,3.40236893 10.8165825,3.40236893 11.2071068,3.79289322 C11.5976311,4.18341751 11.5976311,4.81658249 11.2071068,5.20710678 L8.20710678,8.20710678 C7.81658249,8.59763107 7.18341751,8.59763107 6.79289322,8.20710678 L3.79289322,5.20710678 C3.40236893,4.81658249 3.40236893,4.18341751 3.79289322,3.79289322 C4.18341751,3.40236893 4.81658249,3.40236893 5.20710678,3.79289322 L7.5,6.08578644 L9.79289322,3.79289322 Z" fill="#000000" fill-rule="nonzero" transform="translate(7.500000, 6.000000) rotate(-270.000000) translate(-7.500000, -6.000000) " />
                                                <rect fill="#000000" opacity="0.3" transform="translate(11.000000, 18.000000) scale(1, -1) rotate(90.000000) translate(-11.000000, -18.000000) " x="10" y="12" width="2" height="12" rx="1" />
                                                <path d="M18.7928932,15.7928932 C19.1834175,15.4023689 19.8165825,15.4023689 20.2071068,15.7928932 C20.5976311,16.1834175 20.5976311,16.8165825 20.2071068,17.2071068 L17.2071068,20.2071068 C16.8165825,20.5976311 16.1834175,20.5976311 15.7928932,20.2071068 L12.7928932,17.2071068 C12.4023689,16.8165825 12.4023689,16.1834175 12.7928932,15.7928932 C13.1834175,15.4023689 13.8165825,15.4023689 14.2071068,15.7928932 L16.5,18.0857864 L18.7928932,15.7928932 Z" fill="#000000" fill-rule="nonzero" transform="translate(16.500000, 18.000000) scale(1, -1) rotate(270.000000) translate(-16.500000, -18.000000) " />
                                            </g>
                                        </svg><!--end::Svg Icon-->
                                    </span>
                                </span>
                            </span>
                        </div>
                    </div>
                }
                @if (AuthenticationService.User is not null)
                {
                    <div class="btn-group">
                        <div class="btn btn-icon w-auto btn-clean d-flex align-items-center btn-lg px-2" data-toggle="dropdown">
                            <span class="symbol symbol-35 symbol-light-success">
                                @if (AuthenticationService.User.ProfilePhoto != null)
                                {
                                    <img src="@AuthenticationService.User.ProfilePhoto" />
                                }
                                else
                                {
                                    <span class="symbol-label font-size-h5 font-weight-bold">@(ExtensionMethods.Avatar(AuthenticationService.User.Name))</span>
                                }
                            </span>
                        </div>
                        <!--begin::Dropdown-->
                        <div class="dropdown-menu p-0 m-0 dropdown-menu-anim-up dropdown-menu-sm dropdown-menu-right">
                            <!--begin::Nav-->
                            <ul class="navi navi-hover py-5">
                                <li class="navi-item">
                                    <a href="/settings" class="navi-link">
                                        <span class="navi-icon">
                                            <span class="svg-icon svg-icon-md">
                                                <i class="flaticon2-user text-primary"></i>
                                            </span>
                                        </span>
                                        <span class="navi-text">Profilim</span>
                                    </a>
                                </li>
                                @*<li class="navi-separator my-3"></li>*@
                                <li class="navi-item">
                                    <a href="/logout" class="navi-link" @onclick="RedirectToLogout">
                                        <span class="navi-icon">
                                            <span class="svg-icon svg-icon-md">
                                                <i class="fas fa-sign-out-alt text-danger"></i>
                                            </span>
                                        </span>
                                        <span class="navi-text">@L["Log out"]</span>
                                    </a>
                                </li>
                            </ul>
                            <!--end::Nav-->
                        </div>
                        <!--end::Dropdown-->
                    </div>
                }
            </div>
        </div>
        <!--end::Topbar-->
    </div>
    <!--end::Container-->
</div>
<MyModal @ref="_roleSelectModal" Size="MyModal.ModalSize.Small" ShowFooter="false" ShowHeader="false">
    <Body>
        <div class="font-size-lg mb-5">Aşağıdaki rol listesinden geçmek istediğiniz rolü seçiniz</div>
        @if (AuthenticationService != null && AuthenticationService.Roles != null)
        {
            @foreach (var authenticationServiceRole in AuthenticationService.Roles.Where(x => AuthenticationService.User.UserRoleIds.Contains(x.Id)).OrderBy(x => x.Id))
            {
                <button @onclick="() => SelectRole(authenticationServiceRole)" class="btn @(AuthenticationService.User.SelectedRoleId != null && AuthenticationService.User.SelectedRoleId == authenticationServiceRole.Id ? "btn-secondary disabled" : "btn-outline-secondary") btn-block">@authenticationServiceRole.RoleName</button>
            }
        }
    </Body>
</MyModal>
@code {
    [Inject] public IAuthenticationService AuthenticationService { get; set; }
    [Inject] IDispatcher Dispatcher { get; set; }
    [Inject] IState<AppState> AppState { get; set; }
    [Inject] public NavigationManager NavigationManager { get; set; }
    private MyModal _roleSelectModal;
    protected override void OnInitialized()
    {
        SubscribeToAction<ProfileSetAction>(action => StateHasChanged());
        base.OnInitialized();
    }
    private async Task SelectRole(RoleResponseDTO role)
    {
        await AuthenticationService.UpdateSelectedRole(role.Id);
        _roleSelectModal.CloseModal();
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }
    private void RedirectToLogout()
    {
        var redirectUrl = "https://ogn.saglik.gov.tr/Account/LogOutWithRedirectUrl?redirectUrl=https://ueys.saglik.gov.tr/Login/Logout";
        NavigationManager.NavigateTo(redirectUrl, forceLoad: true);
    }
}