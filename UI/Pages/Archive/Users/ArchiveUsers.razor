@page "/archive/users/"
@using Shared.Types
@using UI.SharedComponents.AdvancedFilters
@using UI.SharedComponents.Components
@using Shared.ResponseModels
@inherits FluxorComponent

<AppContent Title="@L["_List", L["Deactivated User"]]" IsFluid="false">
    <Toolbar>
    </Toolbar>
    <Content>
        <div class="card card-custom">
            <div class="card-body">
                @if (_users != null)
                {
                    <Grid IsFilter="true" Items="_users" class="table table-hover table-bordered text-center" Sort="_filter.Sort.FirstOrDefault()" OnSortChanged="sort => OnSortChange(sort)" RowClass='(row, index) => ""'>
                        <GridColumn Sort="IdentityNo" TRowData="UserPaginateResponseDTO" Expression="c => c.IdentityNo" Title="@L["T.R. Identity Number"]">

                            <FilterTemplate Context="filter">
                                <div class="form-group mb-0">
                                    <div class="input-icon input-icon-right">
                                        <input type="text" class="form-control" name="@filter" @onchange='(args) => OnChangeFilter(args, filter)' autocomplete="false">
                                        @if (IsFiltered(filter))
                                        {
                                            <span class="cursor-pointer" @onclick='() => OnResetFilter(filter)'>
                                                <i class="flaticon2-cross icon- text-danger"></i>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="cursor-pointer">
                                                <i class="flaticon2-search-1 icon-md"></i>
                                            </span>
                                        }
                                    </div>
                                </div>
                            </FilterTemplate>
                        </GridColumn>
                        <GridColumn Sort="Name" TRowData="UserPaginateResponseDTO" Expression="c => c.Name" Title="@L["Name Surname"]">
                            <FilterTemplate Context="filter">
                                <div class="form-group mb-0">
                                    <div class="input-icon input-icon-right">
                                        <input type="text" class="form-control" name="@filter" @onchange='(args) => OnChangeFilter(args, filter)' autocomplete="false">
                                        @if (IsFiltered(filter))
                                        {
                                            <span class="cursor-pointer" @onclick='() => OnResetFilter(filter)'>
                                                <i class="flaticon2-cross icon- text-danger"></i>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="cursor-pointer">
                                                <i class="flaticon2-search-1 icon-md"></i>
                                            </span>
                                        }
                                    </div>
                                </div>
                            </FilterTemplate>
                        </GridColumn>
                        <GridColumn Sort="Email" TRowData="UserPaginateResponseDTO" Title=@L["Email"]>
                            <ChildContent>
                                @context.Email
                            </ChildContent>
                            <FilterTemplate Context="filter">
                                <div class="form-group mb-0">
                                    <div class="input-icon input-icon-right">
                                        <input type="text" class="form-control" name="@filter" @onchange='(args) => OnChangeFilter(args, filter)' autocomplete="false">
                                        @if (IsFiltered(filter))
                                        {
                                            <span class="cursor-pointer" @onclick='() => OnResetFilter(filter)'>
                                                <i class="flaticon2-cross icon- text-danger"></i>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="cursor-pointer">
                                                <i class="flaticon2-search-1 icon-md"></i>
                                            </span>
                                        }
                                    </div>
                                </div>
                            </FilterTemplate>
                        </GridColumn>
                        <GridColumn Sort="Phone" TRowData="UserPaginateResponseDTO" Title="@L["Phone"]">
                            <ChildContent>
                                @context.Phone
                            </ChildContent>
                            <FilterTemplate Context="filter">
                                <div class="form-group mb-0">
                                    <div class="input-icon input-icon-right">
                                        <input type="text" class="form-control" name="@filter" @onchange='(args) => OnChangeFilter(args, filter)' autocomplete="false">
                                        @if (IsFiltered(filter))
                                        {
                                            <span class="cursor-pointer" @onclick='() => OnResetFilter(filter)'>
                                                <i class="flaticon2-cross icon- text-danger"></i>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="cursor-pointer">
                                                <i class="flaticon2-search-1 icon-md"></i>
                                            </span>
                                        }
                                    </div>
                                </div>
                            </FilterTemplate>
                        </GridColumn>
                        <GridColumn TRowData="UserPaginateResponseDTO" Title="@L["Roles"]">
                            <ChildContent>
                                @if (context.Roles?.Count > 0 && context.Roles != null)
                                {
                                    @foreach (var item in context.Roles)
                                    {
                                        <span class="badge badge-warning mb-1 mr-1">
                                            @(item)
                                        </span>
                                    }
                                }
                            </ChildContent>
                        </GridColumn>
                        <GridColumn class="min-w-100px align-middle" TRowData="UserPaginateResponseDTO" Title="@L["Transactions"]">
                            <PermissionWrapper Permissions="new List<PermissionEnum>(){PermissionEnum.ArchiveUndeleteUser}">
                                <a @onclick="async () => await OnUndeleteHandler(context)" class="btn btn-light-danger btn-icon btn-sm">
                                    <i title=@L["Take Back"] class="fas fa-trash-restore-alt"></i>
                                </a>
                            </PermissionWrapper>
                        </GridColumn>
                    </Grid>
                    <Pagination Action="PaginationHandler" Count="_paginationModel.TotalItemCount" Page="_paginationModel.Page"
                                DefaultPageSize="10" Loading="_loading">
                    </Pagination>
                }
                else
                {
                    <Spinner></Spinner>
                }
            </div>
        </div>
    </Content>
</AppContent>