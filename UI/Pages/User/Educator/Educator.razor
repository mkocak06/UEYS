@page "/educator/educators/"
@using Shared.Types;
@using UI.SharedComponents.AdvancedFilters
@using UI.SharedComponents.Components
@using Shared.ResponseModels
@inherits FluxorComponent

<AppContent Title="" IsFluid="true" BreadCrumbLinks="_links">
    <Toolbar>
        <div class="d-flex">
            <PermissionWrapper Permissions="new List<PermissionEnum>(){PermissionEnum.EducatorAdd}">
                <a href="/educator/educators/add-educator" type="button" class="btn btn-outline-primary mr-3">
                    <i class="fas fa-plus"></i>@L["add_new", L["Educator"]]
                </a>
            </PermissionWrapper>
            <PermissionWrapper Permissions="new List<PermissionEnum>(){PermissionEnum.EducatorExcelExport}">
                <div type="button" class=@(_loadingFile ? "btn btn-outline-success spinner spinner-darker-success spinner-left" : "btn btn-outline-success mr-3") @onclick="DownloadExcelFile">
                    <i class=@(_loadingFile ? "" : "fas fa-download")></i>@L["Export"]
                </div>
            </PermissionWrapper>
        </div>
    </Toolbar>
    <Content>
        <div class="card card-custom">
            <div class="card-body">
                @if (_educators != null)
                {
                    <Grid IsFilter="true" Items="_educators" class="table table-hover table-bordered text-center" Sort="_filter.Sort.FirstOrDefault()" OnSortChanged="sort => OnSortChange(sort)" RowClass='(row, index) => ""'>
                        <GridColumn Sort="IdentityNo" TRowData="EducatorPaginateResponseDTO" Expression="c => c.IdentityNo" Title="@L["T.R. Identity Number"]">

                            <FilterTemplate Context="filter">
                                <div class="form-group mb-0">
                                    <div class="input-icon input-icon-right">
                                        <input type="text" class="form-control" name="@filter" @onchange='(args) => OnChangeFilter(args, filter)' autocomplete="false">
                                        @if (IsFiltered(filter))
                                        {
                                            <span class="cursor-pointer" @onclick='() => OnResetFilter(filter)'>
                                                <i class="flaticon2-cross icon- text-danger"></i>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="cursor-pointer">
                                                <i class="flaticon2-search-1 icon-md"></i>
                                            </span>
                                        }
                                    </div>
                                </div>
                            </FilterTemplate>
                        </GridColumn>
                        <GridColumn Sort="AcademicTitle" TRowData="EducatorPaginateResponseDTO" Expression="c => c.AcademicTitle" Title="@L["Academic Title"]">
                            <FilterTemplate Context="filter">
                                <div class="form-group mb-0">
                                    <div class="input-icon input-icon-right">
                                        <input type="text" class="form-control" name="@filter" @onchange='(args) => OnChangeFilter(args, filter)' autocomplete="false">
                                        @if (IsFiltered(filter))
                                        {
                                            <span class="cursor-pointer" @onclick='() => OnResetFilter(filter)'>
                                                <i class="flaticon2-cross icon- text-danger"></i>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="cursor-pointer">
                                                <i class="flaticon2-search-1 icon-md"></i>
                                            </span>
                                        }
                                    </div>
                                </div>
                            </FilterTemplate>
                        </GridColumn>
                        <GridColumn Sort="Name" TRowData="EducatorPaginateResponseDTO" Expression="c => c.Name" Title="@L["Educator's Name Surname"]">
                            <FilterTemplate Context="filter">
                                <div class="form-group mb-0">
                                    <div class="input-icon input-icon-right">
                                        <input type="text" class="form-control" name="@filter" @onchange='(args) => OnChangeFilter(args, filter)' autocomplete="false">
                                        @if (IsFiltered(filter))
                                        {
                                            <span class="cursor-pointer" @onclick='() => OnResetFilter(filter)'>
                                                <i class="flaticon2-cross icon- text-danger"></i>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="cursor-pointer">
                                                <i class="flaticon2-search-1 icon-md"></i>
                                            </span>
                                        }
                                    </div>
                                </div>
                            </FilterTemplate>
                        </GridColumn>
                        <GridColumn Sort="DutyPlaceHospital" Expression="c => c.DutyPlaceHospital" TRowData="EducatorPaginateResponseDTO" Title="@L["Education Institution"]">
                            <FilterTemplate Context="filter">
                                <div class="form-group mb-0">
                                    <div class="input-icon input-icon-right">
                                        <input type="text" class="form-control" name="@filter" @onchange='(args) => OnChangeFilter(args, filter)' autocomplete="false">
                                        @if (IsFiltered(filter))
                                        {
                                            <span class="cursor-pointer" @onclick='() => OnResetFilter(filter)'>
                                                <i class="flaticon2-cross icon- text-danger"></i>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="cursor-pointer">
                                                <i class="flaticon2-search-1 icon-md"></i>
                                            </span>
                                        }
                                    </div>
                                </div>
                            </FilterTemplate>
                        </GridColumn>
                        <GridColumn Sort="PrincipalBranchName" TRowData="EducatorPaginateResponseDTO" Title="@L["Principle Branch"]">
                            <ChildContent>
                                <span>
                                    @(context.PrincipalBranchName)
                                </span>
                            </ChildContent>
                            <FilterTemplate Context="filter">
                                <div class="form-group mb-0">
                                    <div class="input-icon input-icon-right">
                                        <input type="text" class="form-control" name="@filter" @onchange='(args) => OnChangeFilter(args, filter)' autocomplete="false">
                                        @if (IsFiltered(filter))
                                        {
                                            <span class="cursor-pointer" @onclick='() => OnResetFilter(filter)'>
                                                <i class="flaticon2-cross icon- text-danger"></i>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="cursor-pointer">
                                                <i class="flaticon2-search-1 icon-md"></i>
                                            </span>
                                        }
                                    </div>
                                </div>
                            </FilterTemplate>
                        </GridColumn>
                        <GridColumn Sort="SubBranchName" TRowData="EducatorPaginateResponseDTO" Title="@L["Sub Branch"]">
                            <ChildContent>
                                <span>
                                    @context.SubBranchName
                                </span>
                            </ChildContent>
                            <FilterTemplate Context="filter">
                                <div class="form-group mb-0">
                                    <div class="input-icon input-icon-right">
                                        <input type="text" class="form-control" name="@filter" @onchange='(args) => OnChangeFilter(args, filter)' autocomplete="false">
                                        @if (IsFiltered(filter))
                                        {
                                            <span class="cursor-pointer" @onclick='() => OnResetFilter(filter)'>
                                                <i class="flaticon2-cross icon- text-danger"></i>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="cursor-pointer">
                                                <i class="flaticon2-search-1 icon-md"></i>
                                            </span>
                                        }
                                    </div>
                                </div>
                            </FilterTemplate>
                        </GridColumn>

                        <GridColumn TRowData="EducatorPaginateResponseDTO" Title="@L["Roles"]">
                            <FilterTemplate Context="filter">
                                <div class="form-group mb-0">
                                    <select class="selectpicker" data-actions-box="true" data-selected-text-format="count" multiple name="@filter" title="Lütfen seçiniz..." @onchange='(args) => OnChangeSelectFilter(args, "Role")'>
                                        @foreach (var role in _roles)
                                        {
                                            <option value="@role">@role</option>
                                        }

                                    </select>
                                </div>
                            </FilterTemplate>
                            <ChildContent>
                                @if (context.Roles?.Count > 0 && context.Roles != null)
                                {
                                    @foreach (var item in context.Roles)
                                    {
                                        <span class="badge badge-warning mb-1 mr-1">
                                            @(item)
                                        </span>
                                    }
                                }
                            </ChildContent>
                        </GridColumn>
                        <GridColumn TRowData="EducatorPaginateResponseDTO" Title="@L["Administrative Mission"]">
                            <FilterTemplate Context="filter">
                                <div class="form-group mb-0">
                                    <select class="selectpicker" data-actions-box="true" data-selected-text-format="count" multiple name="@filter" title="Lütfen seçiniz..." @onchange='(args) => OnChangeSelectFilter(args, "AdminTitle")'>
                                        @foreach (var item in _adminTitles)
                                        {
                                            <option value="@item">@item</option>
                                        }

                                    </select>
                                </div>
                            </FilterTemplate>
                            <ChildContent>
                                @if (context.EducatorAdministrativeTitles?.Count > 0 && context.EducatorAdministrativeTitles != null)
                                {
                                    <ul class="float-left">
                                        @foreach (var item in context.EducatorAdministrativeTitles)
                                        {
                                            <li class="mb-1 mr-1">
                                                @(item)
                                            </li>
                                        }
                                    </ul>
                                }
                            </ChildContent>
                        </GridColumn>
                        <GridColumn class="min-w-100px align-middle" TRowData="EducatorPaginateResponseDTO" Title="@L["Transactions"]">
                            <PermissionWrapper Permissions="new List<PermissionEnum>(){PermissionEnum.EducatorGetById}">
                                <a href="/student/educator-tag/@context.Id" class="btn btn-light-warning btn-icon btn-sm">
                                    <i class="fa fa-info"></i>
                                </a>
                            </PermissionWrapper>
                            <PermissionWrapper Permissions="new List<PermissionEnum>(){PermissionEnum.EducatorUpdate}">

                                <a href="/educator/educators/@context.Id" class="btn btn-light-success btn-icon btn-sm">
                                    <i class="far fa-edit"></i>
                                </a>
                            </PermissionWrapper>
                            <PermissionWrapper Permissions="new List<PermissionEnum>(){PermissionEnum.EducatorDelete}">
                                <a @onclick="() => OnDeleteHandler(context)" class="btn btn-light-danger btn-icon btn-sm">
                                    <i class="fas fa-trash-alt"></i>
                                </a>
                            </PermissionWrapper>
                        </GridColumn>
                    </Grid>
                    <Pagination Action="PaginationHandler" Count="_paginationModel.TotalItemCount" Page="_paginationModel.Page"
                                DefaultPageSize="10" Loading="_loading">
                    </Pagination>
                }
                else
                {
                    <Spinner></Spinner>
                }
            </div>
        </div>
        <MyModal @ref="_deleteModal" ShowFooter="false" ShowHeader="false">
            <Body>
                <div class="form-group">
                    <label>@L["Delete Reason"]</label>
                    <InputSelect Class="form-control" @bind-Value="@_educator.DeleteReason">
                        <option value="" selected>@L["Select"]</option>
                        @foreach (EducatorDeleteReasonType deleteReasonType in Enum.GetValues(typeof(EducatorDeleteReasonType)))
                        {
                            <option value="@deleteReasonType">@L[deleteReasonType.Description()] </option>
                        }
                    </InputSelect>
                </div>
                @if (!string.IsNullOrEmpty(_deleteReasonValidatorMessage))
                {
                    <div class="validation-message">@_deleteReasonValidatorMessage</div>
                }
                <div class="form-group">
                    <label>@L["Explanation"]</label>
                    <InputText type="text" class="form-control" @bind-Value="_educator.DeleteReasonExplanation" />
                </div>
                @if (!string.IsNullOrEmpty(_explanationValidatorMessage))
                {
                    <div class="validation-message">@_explanationValidatorMessage</div>
                }
                <button @onclick="DeleteEducator" class="btn btn-clean btn-primary"> @L["Add"]</button>
            </Body>
        </MyModal>
    </Content>
</AppContent>