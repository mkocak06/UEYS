@using Shared.Types
@using UI.SharedComponents.Components
@using Shared.ResponseModels
@inherits FluxorComponent

<div class="card-toolbar position-absolute top-0 right-0 mt-5 mr-5">

    <div class="d-flex self-align-end">
        <PermissionWrapper Permissions="new List<PermissionEnum>(){PermissionEnum.ProgramUpdate}">
            <SpinnerButton Spinning="_saving" Disabled="_saving" OnClick="() => Save()">
                <i class="fas fa-save"></i>@L["Save"]
            </SpinnerButton>
        </PermissionWrapper>
    </div>
</div>

<div class="card card-custom">
    <div class="card-header ribbon ribbon-right">
        <div class="ribbon-target bg-danger" style="top: 10px; right: -2px;">@L["Education Officer"] : @(ProgramDetail.EducationOfficers.Count > 0 && ProgramDetail.EducationOfficers.Any(x => x.EndDate == null) ? ProgramDetail.EducationOfficers?.FirstOrDefault(x => x.EndDate == null).Educator?.User?.Name : "-")</div>
        <h3 class="card-title">
            @L["_Information", L["Expertise Training Program"]]
        </h3>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-12 col-lg-12">
                <EditForm EditContext="_ec">
                    <FluentValidator TValidator="ProgramValidator"></FluentValidator>
                    <div class="row">
                        <div class="col-lg-6">

                            <div class="form-group">
                                <label>@L["Ministry / University"]</label>
                                <BlazoredTypeahead SearchMethod="SearchUniversities"
                                                   TItem="UniversityResponseDTO"
                                                   TValue="UniversityResponseDTO"
                                                   Value="ProgramDetail?.Hospital?.Faculty?.University"
                                                   ValueExpression="() => ProgramDetail.Faculty.University"
                                                   ValueChanged="OnChangeUniversity"
                                                   EnableDropDown="true"
                                                   MinimumLength="1"
                                                   MaximumSuggestions="int.MaxValue">
                                    <SelectedTemplate Context="university">
                                        @university.Name
                                    </SelectedTemplate>
                                    <HelpTemplate>
                                        @L["Please enter at least 1 character to search."]
                                    </HelpTemplate>
                                    <NotFoundTemplate Context="searchText">
                                        "@searchText" @L["Could not find an item named"]
                                    </NotFoundTemplate>
                                    <ResultTemplate Context="university">
                                        @university.Name
                                    </ResultTemplate>
                                </BlazoredTypeahead>
                            </div>
                            <div class="form-group">
                                <label>@L["Educational Institution / Faculty"]</label>
                                <BlazoredTypeahead SearchMethod="SearchFaculties"
                                                   TItem="FacultyResponseDTO"
                                                   TValue="FacultyResponseDTO"
                                                   Value="ProgramDetail?.Hospital?.Faculty"
                                                   ValueExpression="() => ProgramDetail.Faculty"
                                                   ValueChanged="OnChangeFaculty"
                                                   EnableDropDown="true"
                                                   MinimumLength="1"
                                                   MaximumSuggestions="int.MaxValue">
                                    <SelectedTemplate Context="faculty">
                                        @faculty?.Name
                                    </SelectedTemplate>
                                    <HelpTemplate>
                                        @L["Please enter at least 1 character to search."]
                                    </HelpTemplate>
                                    <NotFoundTemplate Context="searchText">
                                        "@searchText" @L["Could not find an item named"]
                                    </NotFoundTemplate>
                                    <ResultTemplate Context="faculty">
                                        @faculty?.Name
                                    </ResultTemplate>
                                </BlazoredTypeahead>
                            </div>
                        </div>
                        @if (_affiliation != null)
                        {
                            <div class="col-lg-6">

                                <div class="form-group">
                                    <label>@L["Affiliation Ministry / University"]</label>
                                    <input class="form-control" type="text" value="@ProgramDetail.Faculty.University.Name" disabled>
                                </div>
                                <div class="form-group">
                                    <label>@L["Affiliation Educational Institution / Faculty"]</label>
                                    <input class="form-control" type="text" value="@ProgramDetail.Faculty.Name" disabled>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>@L["Institution of Education"]</label>
                                <BlazoredTypeahead SearchMethod="SearchHospitals"
                                                   TItem="HospitalResponseDTO"
                                                   TValue="HospitalResponseDTO"
                                                   Value="ProgramDetail.Hospital"
                                                   ValueExpression="() => ProgramDetail.Hospital"
                                                   ValueChanged="OnChangeHospital"
                                                   EnableDropDown="true"
                                                   MinimumLength="1"
                                                   MaximumSuggestions="int.MaxValue"
                                                   Disabled="ProgramDetail.Faculty.UniversityId <= 0">
                                    <SelectedTemplate Context="hospital">
                                        @hospital?.Name
                                    </SelectedTemplate>
                                    <HelpTemplate>
                                        @L["Please enter at least 1 character to search."]
                                    </HelpTemplate>
                                    <NotFoundTemplate Context="searchText">
                                        "@searchText" @L[" Could not find an item named."]
                                    </NotFoundTemplate>
                                    <ResultTemplate Context="hospital">
                                        @hospital?.Name
                                    </ResultTemplate>
                                </BlazoredTypeahead>
                            </div>
                            <div class="form-group">
                                <label>@L["Specialization Training Program"]</label>
                                <BlazoredTypeahead SearchMethod="SearchExpertiseBranches"
                                                   TItem="ExpertiseBranchResponseDTO"
                                                   TValue="ExpertiseBranchResponseDTO"
                                                   Value="ProgramDetail.ExpertiseBranch"
                                                   ValueExpression="() => ProgramDetail.ExpertiseBranch"
                                                   ValueChanged="OnChangeExpertiseBranch"
                                                   EnableDropDown="true"
                                                   MinimumLength="1"
                                                   MaximumSuggestions="int.MaxValue">
                                    <SelectedTemplate Context="expertiseBranch">
                                        @expertiseBranch?.Name
                                    </SelectedTemplate>
                                    <HelpTemplate>
                                        @L["Please enter at least 1 character to search."]
                                    </HelpTemplate>
                                    <NotFoundTemplate Context="searchText">
                                        "@searchText" @L[" Could not find an item named."]
                                    </NotFoundTemplate>
                                    <ResultTemplate Context="expertiseBranch">
                                        @expertiseBranch?.Name
                                    </ResultTemplate>
                                </BlazoredTypeahead>
                            </div>
                        </div>
                    </div>


                </EditForm>
                <Grid IsFilter="false" Items="ProgramDetail.AuthorizationDetails" class="table table-hover table-bordered " RowClass='(row, index) => ""'>
                    <GridColumn TRowData="AuthorizationDetailResponseDTO" Title="@L["Authorization End Date"]">
                        @context.AuthorizationEndDate?.ToString("dd.MM.yyyy")
                    </GridColumn>
                    <GridColumn TRowData="AuthorizationDetailResponseDTO" Title="@L["Authorization Category"]">
                        <span class="badge text-white" data-toggle="tooltip" data-original-title="@context.AuthorizationCategory?.Description" style="background-color:@context.AuthorizationCategory?.ColorCode?.ToString();">@context.AuthorizationCategory?.Name</span>
                    </GridColumn>
                    <GridColumn TRowData="AuthorizationDetailResponseDTO" Title="@L["Date of Visit"]">
                        @context.VisitDate?.ToString("dd.MM.yyyy")
                    </GridColumn>
                    <GridColumn TRowData="AuthorizationDetailResponseDTO" Title="@L["Authorization Decision Date"]">
                        @context.AuthorizationDate?.ToString("dd.MM.yyyy")
                    </GridColumn>
                    <GridColumn TRowData="AuthorizationDetailResponseDTO" Title="@L["Authorization Decision No"]">
                        @context.AuthorizationDecisionNo
                    </GridColumn>

                    <GridColumn class="min-w-100px align-middle" TRowData="AuthorizationDetailResponseDTO" Title="@L["Transactions"]">
                            <PermissionWrapper Permissions="new List<PermissionEnum>(){PermissionEnum.ProgramUpdate}">
                        <button @onclick="() => UpdateAuthorizationDetail(context)" class="btn btn-icon btn-outline-success btn-sm">
                            <i class="fa fa-edit"></i>
                        </button>
                        <button @onclick="() => RemoveAuthorizationDetailAsync(context)" class="btn btn-icon btn-outline-danger btn-sm">
                            <i class="fa fa-trash"></i>
                        </button>
                        </PermissionWrapper>
                    </GridColumn>
                </Grid>
                <div class="text-center mt-5">
                            <PermissionWrapper Permissions="new List<PermissionEnum>(){PermissionEnum.ProgramUpdate}">
                    <button @onclick="OnOpenAuthorizationDetailList" class="btn btn-outline-primary">@L["add_new", L["Authorization Detail"]]</button>
                    </PermissionWrapper>
                </div>
            </div>
        </div>
    </div>
</div>



<MyModal @ref="_authorizationDetailModal" ShowFooter="false" ShowHeader="false">
    <Body>
        <EditForm EditContext="_authorizationEc">
            <FluentValidator TValidator="AuthorizationDetailValidator"></FluentValidator>
            <div id="form-exams-list">
                <div id="authorization-form">
                    <div class="form-group">
                        <label>@L["_Date", L["Visit"], string.Empty]</label>
                        <InputDate class="form-control" @bind-Value="_authorizationDetail.VisitDate" TValue="DateTime?"></InputDate>
                    </div>
                    <div class="form-group">
                        <label>@L["Authorization Decision Date"]</label>
                        <InputDate class="form-control" Value="_authorizationDetail.AuthorizationDate" ValueExpression="()=>_authorizationDetail.AuthorizationDate" ValueChanged="OnChangeAuthorizationDate" TValue="DateTime?"></InputDate>
                    </div>
                    <div class="form-group">
                        <label>@L["Authorization Decision Number"]</label>
                        <InputText type="text" class="form-control" @bind-Value="_authorizationDetail.AuthorizationDecisionNo" />
                    </div>
                    <div class="form-group">
                        <label>@L["Current Authorization Category"]</label>
                        <BlazoredTypeahead SearchMethod="SearchAuthorizationCategories"
                                           TItem="AuthorizationCategoryResponseDTO"
                                           TValue="AuthorizationCategoryResponseDTO"
                                           Value="_authorizationDetail.AuthorizationCategory"
                                           ValueExpression="@(() => _authorizationDetail.AuthorizationCategory)"
                                           ValueChanged="OnChangeAuthorizationCategory"
                                           EnableDropDown="true"
                                           MinimumLength="1"
                                           MaximumSuggestions="int.MaxValue">
                            <SelectedTemplate Context="autCat">
                                @if (autCat.Name != null)
                                {
                                    @autCat.Name
                                    <i class="fa fa-circle icon-lg" style="display:flex;  margin-left:5px; font-size:80px; color: @autCat.ColorCode"></i>
                                }
                            </SelectedTemplate>
                            <HelpTemplate>
                                @L["Please enter at least 1 character to search."]
                            </HelpTemplate>
                            <NotFoundTemplate Context="searchText">
                                "@searchText" @L["Could not find an item named"]
                            </NotFoundTemplate>
                            <ResultTemplate Context="autCat">
                                @autCat.Name
                                <i class="fa fa-circle icon-lg" style="display:flex;  font-size:80px; color: @autCat.ColorCode"></i>
                            </ResultTemplate>
                        </BlazoredTypeahead>
                        <ValidationMessage For="() => _authorizationDetail.AuthorizationCategoryId"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>@L["_Date", L["End"]]</label>
                        <input type="text" class="form-control" value="@_authorizationDetail.AuthorizationEndDate?.ToString("dd MMMM yyyy")" disabled />
                    </div>
                    <div class="form-group">
                        <label>@L["Description"]</label>
                        <BlazoredTypeahead SearchMethod="ExtensionMethods.GetDescriptionOptions"
                                           Values="_authorizationDetail.Descriptions"
                                           ValuesExpression="()=>_authorizationDetail.Descriptions"
                                           ValuesChanged="(IList<string> values)=>OnChangeDescription(values)"
                                           EnableDropDown="true" 
                                           MinimumLength="1" AddItemOnEmptyResultMethod="AddItemOnEmptyResult" ShowDropDownOnFocus 
                                           MaximumSuggestions=10>
                            <SelectedTemplate Context="group">
                                @group
                            </SelectedTemplate>
                            <HelpTemplate>
                                @L["Please enter at least 2 character to search."]
                            </HelpTemplate>
                            <NotFoundTemplate Context="searchText">
                                @if (string.IsNullOrEmpty(searchText))
                                {
                                    @L["Could not find an item"]
                                }
                                else
                                {
                                    <div>@searchText @L["bulunamadı. Eklemek için enter'a basınız"]</div>
                                }
                            </NotFoundTemplate>
                            <ResultTemplate Context="group">
                                @group
                            </ResultTemplate>
                        </BlazoredTypeahead>

                        <ValidationMessage For="() => _authorizationDetail.Descriptions"></ValidationMessage>
                        <ValidationMessage For="() => _authorizationDetail.AuthorizationEndDate"></ValidationMessage>
                    </div>
                </div>
            </div>
            <button @onclick="AddAuthorizationDetail" class="btn btn-clean btn-primary"> @L["Save"] </button>
        </EditForm>
    </Body>
</MyModal>