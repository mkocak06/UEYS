@page "/management/authorizationCategories"
@using Shared.Types
@using UI.SharedComponents.Components
@using Shared.ResponseModels
@inherits FluxorComponent

<AppContent IsFluid="false" BreadCrumbLinks="_links">
    <Toolbar>
        <div class="d-flex">
            <PermissionWrapper Permissions="new List<PermissionEnum>(){PermissionEnum.AuthorizationCategoryAdd}">
                <a href="/management/authorizationCategories/add-authorizationCategory" type="button" class="btn btn-outline-primary mr-3"><i class="fas fa-plus"></i>@L["add_new", L["Authorization Category"]]</a>
            </PermissionWrapper>
        </div>
    </Toolbar>
    <Content>
        <div class="card card-custom">
            <div class="card-body">
                @if (_authorizationCategories != null)
                {
                    <Grid IsFilter="false" Items="_authorizationCategories" Sort="_filter.Sort.FirstOrDefault()" OnSortChanged="sort => OnSortChange(sort)"
                          class="table table-hover table-bordered " RowClass='(row, index) => ""'>
                        <GridColumn Sort="Name" TRowData="AuthorizationCategoryResponseDTO" Expression="c => c.Name" Title="@L["_name", L["Authorization Category"]]">
                        </GridColumn>
                        <GridColumn Sort="Description" TRowData="AuthorizationCategoryResponseDTO" Expression="c => c.Description" Title="@L["_Description", L["Authorization Category"]]">
                        </GridColumn>
                        <GridColumn TRowData="AuthorizationCategoryResponseDTO" Title="@L["Authorization Color"]">
                            <div style="display: flex;justify-content: center;align-items: center;">
                                <i class="fa fa-circle icon-lg" style="display:flex; font-size:80px; color:@context.ColorCode"></i>
                            </div>
                        </GridColumn>
                        <GridColumn class="max-w-100px align-middle" TRowData="AuthorizationCategoryResponseDTO" Title="@L["Transactions"]">
                            <PermissionWrapper Permissions="new List<PermissionEnum>(){PermissionEnum.AuthorizationCategoryGetById}">
                                <a href="/management/authorizationCategories/@context.Id" class="btn btn-light-success btn-icon btn-sm"><i class="far fa-edit"></i></a>
                            </PermissionWrapper>
                            <PermissionWrapper Permissions="new List<PermissionEnum>(){PermissionEnum.AuthorizationCategoryDelete}">
                                <a @onclick="() => OnDeleteHandler(context)" class="btn btn-light-danger btn-icon btn-sm"><i class="fas fa-trash-alt"></i></a>
                            </PermissionWrapper>
                        </GridColumn>
                    </Grid>
                    @*                    <Pagination Action="PaginationHandler" Count="_paginationModel.TotalItemCount" Page="_paginationModel.Page"
                DefaultPageSize="10" Loading="_loading">
                </Pagination>*@
                }
                else
                {
                    <Spinner></Spinner>
                }
            </div>
        </div>
    </Content>
</AppContent>