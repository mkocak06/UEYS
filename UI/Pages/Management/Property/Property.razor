@page "/management/properties"
@using Shared.Extensions
@using UI.SharedComponents.Components
@using Shared.ResponseModels
@inherits FluxorComponent

<AppContent  IsFluid="false" BreadCrumbLinks="_links">
    <Toolbar>
        <div class="d-flex">
            <a href="/management/properties/add-property" type="button" class="btn btn-outline-primary mr-3"><i class="fas fa-plus"></i>@L["add_new", L["Property"]]</a>
        </div>
    </Toolbar>
    <Content>
        <div class="card card-custom">
            <div class="card-body">
                @if (_propertys != null)
                {
                    <Grid IsFilter="false" Items="_propertys" Sort="_filter.Sort.FirstOrDefault()" OnSortChanged="sort => OnSortChange(sort)"
                          class="table table-hover table-bordered " RowClass='(row, index) => ""'>
                        <GridColumn Sort=" Name" TRowData="PropertyResponseDTO" Expression="c=> c.Name" Title="@L["_name",L["Property"]]">
                            <FilterTemplate Context="filter">
                                <div class="form-group mb-0">
                                    <div class="input-icon input-icon-right">
                                        <input type="text" class="form-control" name="@filter" @onchange='(args) => UpdatePropertyFilter(args, filter)' autocomplete="false">
                                        @if (IsFiltered(filter))
                                        {
                                            <span class="cursor-pointer" @onclick='() => OnResetFilter(filter)'>
                                                <i class="flaticon2-cross icon- text-danger"></i>
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="cursor-pointer">
                                                <i class="flaticon2-search-1 icon-md"></i>
                                            </span>
                                        }
                                    </div>
                                </div>
                            </FilterTemplate>
                        </GridColumn>
                        <GridColumn Sort="PropertyType" TRowData="PropertyResponseDTO" Title="@L["_Details",L["Property"]]">
                            <ChildContent>
                                @(L[context.PropertyType?.ToString()])
                            </ChildContent>
                        </GridColumn>
                        <GridColumn Sort ="PerfectionType"  TRowData="PropertyResponseDTO" Title="@L["Perfection"]">
                            <ChildContent>
                                @(L[context.PerfectionType?.GetDescription()])
                            </ChildContent>
                        </GridColumn> 
                        
                        <GridColumn class="max-w-50px align-middle" TRowData="PropertyResponseDTO" Title="@L["Transactions"]">
                            <a href="/management/properties/@context.Id" class="btn btn-light-success btn-icon btn-sm"><i class="far fa-edit"></i></a>
                            <a @onclick="() => OnDeleteHandler(context)" class="btn btn-light-danger btn-icon btn-sm"><i class="fas fa-trash-alt"></i></a>
                        </GridColumn>
                    </Grid>
                    <Pagination Action="PaginationHandler" Count="_paginationModel.TotalItemCount" Page="_paginationModel.Page"
                                DefaultPageSize="10" Loading="_loading">
                    </Pagination>
                }
                else
                {
                    <Spinner></Spinner>
                }
            </div>
        </div>

    </Content>
</AppContent>